package com.codecoop.interact.core.domain;

// Generated Jul 26, 2014 9:46:18 PM by Hibernate Tools 3.4.0.CR1

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Guardian generated by hbm2java
 */
@Entity
@Table(name = "GUARDIAN", catalog = "INTERACT")
public class Guardian implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -3998094132358027811L;
	private Long id;
	private Long patientId;
	private String guardianName;
	private Long age;
	private String relationToPatient;
	private Date dateCreated;
	private String userCreated;
	private Date dateModified;
	private String userModified;
	
	private Set<GuardianAddress> guardianAddresses = new HashSet<GuardianAddress>();	
	
	private Set<GuardianContact> guardianContacts = new HashSet<GuardianContact>();

	public Guardian() {
	}

	public Guardian(Long patientId, String guardianName, Long age,
			String relationToPatient, Date dateCreated, String userCreated,
			Date dateModified, String userModified) {
		this.patientId = patientId;
		this.guardianName = guardianName;
		this.age = age;
		this.relationToPatient = relationToPatient;
		this.dateCreated = dateCreated;
		this.userCreated = userCreated;
		this.dateModified = dateModified;
		this.userModified = userModified;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "ID", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}
	
	@Column(name = "PATIENT_ID")
	public Long getPatientId() {
		return this.patientId;
	}

	public void setPatientId(Long patientId) {
		this.patientId = patientId;
	}

	@Column(name = "GUARDIAN_NAME", length = 100)
	public String getGuardianName() {
		return this.guardianName;
	}

	public void setGuardianName(String guardianName) {
		this.guardianName = guardianName;
	}

	@Column(name = "AGE")
	public Long getAge() {
		return this.age;
	}

	public void setAge(Long age) {
		this.age = age;
	}

	@Column(name = "RELATION_TO_PATIENT", length = 100)
	public String getRelationToPatient() {
		return this.relationToPatient;
	}

	public void setRelationToPatient(String relationToPatient) {
		this.relationToPatient = relationToPatient;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DATE_CREATED", length = 19)
	public Date getDateCreated() {
		return this.dateCreated;
	}

	public void setDateCreated(Date dateCreated) {
		this.dateCreated = dateCreated;
	}

	@Column(name = "USER_CREATED", length = 50)
	public String getUserCreated() {
		return this.userCreated;
	}

	public void setUserCreated(String userCreated) {
		this.userCreated = userCreated;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DATE_MODIFIED", length = 19)
	public Date getDateModified() {
		return this.dateModified;
	}

	public void setDateModified(Date dateModified) {
		this.dateModified = dateModified;
	}

	@Column(name = "USER_MODIFIED", length = 50)
	public String getUserModified() {
		return this.userModified;
	}

	public void setUserModified(String userModified) {
		this.userModified = userModified;
	}

	public void setGuardianAddresses(Set<GuardianAddress> guardianAddresses) {
		this.guardianAddresses = guardianAddresses;
	}
	
	@OneToMany(fetch = FetchType.LAZY,cascade=CascadeType.ALL)
	@JoinColumn(name="GUARDIAN_ID")
	public Set<GuardianAddress> getGuardianAddresses() {
		return guardianAddresses;
	}

	public void setGuardianContacts(Set<GuardianContact> guardianContacts) {
		this.guardianContacts = guardianContacts;
	}
	
	@OneToMany(fetch = FetchType.LAZY,cascade=CascadeType.ALL)
	@JoinColumn(name="GUARDIAN_ID")
	public Set<GuardianContact> getGuardianContacts() {
		return guardianContacts;
	}

}
